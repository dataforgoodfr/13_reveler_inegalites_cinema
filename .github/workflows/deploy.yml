name: Deploy

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ric-backend
  IMAGE_NAME_FRONTEND: ric-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    environment: production

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.D4GTECH_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME_BACKEND }}
            ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME_FRONTEND }}

      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./backend/Dockerfile.prod
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME_BACKEND }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME_FRONTEND }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Copy files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.prod.yaml"
          target: "/opt/ric"

      - name: Deploy application via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/ric
            # ⚠️ Create .env file dynamically with correct values
            echo "ALLOWED_ORIGINS=${{ vars.ALLOWED_ORIGINS }}" > .env
            echo "BACKEND_PORT=${{ vars.BACKEND_PORT }}" >> .env
            echo "FRONTEND_PORT=${{ vars.FRONTEND_PORT }}" >> .env
            echo "NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }}" >> .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "DOCKERHUB_USERNAME=${{ env.REGISTRY }}/${{ github.repository }}" >> .env

            echo ${{ secrets.D4GTECH_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            mv docker-compose.prod.yaml docker-compose.yml
            docker compose pull
            docker compose down
            docker compose up -d --build --remove-orphans
