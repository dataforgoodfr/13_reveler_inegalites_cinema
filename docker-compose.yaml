services:
  db:
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ric_db
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    volumes:
      - .:/backend
      - backend-poetry-cache:/root/.cache/pypoetry
    ports:
      - "5001:5001"
      - "8888:8888" # Expose Jupyter's port - dev mode only
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1 # Ensures unbuffered output (useful for logging)
      - DATABASE_URL=postgresql+psycopg://postgres:postgres@db:5432/ric_db
      - METABASE_SITE_URL
      - METABASE_SECRET_KEY
      - METABASE_DASHBOARD_ID
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend-node-modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:5001
    depends_on:
      - backend

volumes:
  db-data:
  backend-poetry-cache:
  frontend-node-modules:
